<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- security 기능: 인증과 권한을 좀 더 간편하고 쉽게 하기 위한 프레임워크(라이브러리) -->


	<!-- 1. 제일 기본형 security!! -->
	<!-- auto-config="true"를 설정한 것만으로 기본 로그인 페이지/ HTTP 기본인증/ 로그아웃 기능 등을 제공 -->
	<!-- use-expressions="true"를 설정하지 않으면 default가 false이다. 이럴 때는, SpEL을 사용하지 
		않는다. -->
	<http auto-config="true" use-expressions="false">
		<intercept-url pattern="/**" access="ROLE_USER" />
		<!-- root밑의 모든 url을 intercept해서 ROLE_USER만 접근허용하겠음 -->
		<!-- spring-security에서 자동생성한 /(contextpath)/login 페이지로 이동한다. -->
	</http>

	<authentication-manager>
		<authentication-provider>
			<!-- DB연동 없이 그냥 이렇게 쓰는 방식을 in-memory방식이라 하는데 당연히 실무에선 이렇게 안한다.. -->
			<user-service>
				<user name="user" password="userPw" authorities="ROLE_USER" />
				<user name="guest" password="guest" authorities="ROLE_GUEST" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

</beans:beans>